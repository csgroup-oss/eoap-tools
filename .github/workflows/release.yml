name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build and check distribution package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: ">=0.6.0"
      - name: Run build
        run: uv build
      - name: Run twine check
        run: uvx twine check dist/*
      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: py-dist
          path: dist/

  # publish-pypi:
  #   name: Publish to PyPI
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/eoap-tools
  #     # name: pypi
  #     # url: https://pypi.org/p/eoap-tools
  #   permissions:
  #     id-token: write # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #     - name: Download distribution artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: py-dist
  #         path: dist/
  #     - name: Publish distribution package
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/

  gh-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    # needs: [build, publish-pypi]
    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: py-dist
          path: dist/
      - name: Sign the distribution artifacts with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: ./dist/*
      - name: Create GitHub Release
        run: |
          ./scripts/get_latest_release_notes.py --github-release > notes.md
          gh release create "${{ github.ref_name }}" dist/* --target "${{ github.sha }}" --title "${{ github.ref_name }}" --notes-file notes.md
